/*
Train API

Testing DefaultAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_DefaultAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DefaultAPIService BookUserIdTrainIdTravelClassTicketTypePost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var userId string
		var trainId string
		var travelClass string
		var ticketType string

		httpRes, err := apiClient.DefaultAPI.BookUserIdTrainIdTravelClassTicketTypePost(context.Background(), userId, trainId, travelClass, ticketType).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DefaultAPIService TrainsDepartureStationArrivalStationDepartureDateReturnDateNumTicketsTravelClassGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var departureStation string
		var arrivalStation string
		var departureDate string
		var returnDate string
		var numTickets int32
		var travelClass string

		httpRes, err := apiClient.DefaultAPI.TrainsDepartureStationArrivalStationDepartureDateReturnDateNumTicketsTravelClassGet(context.Background(), departureStation, arrivalStation, departureDate, returnDate, numTickets, travelClass).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
